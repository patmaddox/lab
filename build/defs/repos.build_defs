def jj_repo(name:str, repo:str, version:str=None, visibility:list=None):
    version_flag = ""
    version_suffix = ""

    if version:
        clean_version = version.replace("/", "-")
        version_flag = f"-r {version}"
        version_suffix = f"--{version}"

    jj_repo = f"{repo}.jj"
    jj_workspace = f"{repo}{version_suffix}.jj"
    rev = version or "@"
    
    cmd = " && ".join([
        # forget workspace at first, in case a previous run failed
        f"${TOOLS_JJ} -R $(${TOOLS_PLEASE} query reporoot)/repos/{jj_repo} workspace forget __plz{version_suffix} 2> /dev/null || true",
        f"${TOOLS_JJ} -R $(${TOOLS_PLEASE} query reporoot)/repos/{jj_repo} workspace add -r {rev} --name __plz{version_suffix} {jj_workspace}",
        f"${TOOLS_JJ} -R $(${TOOLS_PLEASE} query reporoot)/repos/{jj_repo} workspace forget __plz{version_suffix}",
        f"rm -rf {jj_workspace}/.jj"
    ])

    workspace_rule = build_rule(
        name = name,
        cmd = cmd,
        outs = [jj_workspace],
        visibility = visibility,
        _subrepo = True,
        tools = {
            "JJ": "jj",
            "PLEASE": "please"
        }
    )

    return subrepo(
        name = name,
        dep = workspace_rule
    )
