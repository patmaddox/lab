#!/bin/sh
set -eu

main() {
    sync-pw::parse_args "${@}"

    case "${command}" in
	u)
            sync-pw::users
            ;;
	g)
            sync-pw::groups
            ;;
	*)
	    sync-pw::usage
	    exit 1
	    ;;
    esac
}

sync-pw::users() {
    local existing
    local from_root_pw
    local to_root_pw

    if [ "${object}" = "root" ]; then
	to_root_pw=$(pw -V ${to_root} user show -n ${object} | cut -d : -f 2)
	if [ -z "${to_root_pw}" ]; then
	    from_root_pw=$(pw -V ${from_root} user show -n ${object} | cut -d : -f 2)
	    echo "${from_root_pw}" | pw -V ${to_root} user mod -n ${object} -H 0
	fi
    else
	if ! pw -V ${to_root} user show ${object} > /dev/null 2>&1; then
 	    pw -V ${from_root} user show ${object} >> ${to_root}/master.passwd
	fi
    fi

    pwd_mkdb -p -d ${to_root} ${to_root}/master.passwd
}

sync-pw::groups() {
    local from_group
    local new_users

    from_group=$(pw -V ${from_root} group show -n ${object})

    if pw -V ${to_root} group show -n ${object} > /dev/null 2>&1; then
	new_users=$(echo "${from_group}" | cut -d : -f 4)
	pw -V ${to_root} group mod -n ${object} -m ${new_users}
    else
	echo "${from_group}" >> ${to_root}/group
    fi
}

sync-pw::parse_args() {
    from_root="${1:-}"
    if [ -z "{from_root}" ]; then
	sync-pw::usage
	exit 1
    fi
    shift

    to_root="${1:-}"
    if [ -z "{to_root}" ]; then
	sync-pw::usage
	exit 1
    fi
    shift

    command="${1:-}"
    if [ -z "{command}" ]; then
	sync-pw::usage
	exit 1
    fi
    shift

    object=${1:-}
    if [ -z "{object}" ]; then
	sync-pw::usage
	exit 1
    fi
}

sync-pw::usage() {
    cat<<EOF
Usage:
  sync-pw <from-root> <to-root> u <user1>
  sync-pw <from-root> <to-root> g <group1>
EOF
}

main "${@}"
